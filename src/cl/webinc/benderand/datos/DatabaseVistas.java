package cl.webinc.benderand.datos;

import android.database.sqlite.SQLiteDatabase;

public class DatabaseVistas {

	public static void agregavistas(SQLiteDatabase db){
		
		db.execSQL("CREATE VIEW carne_empresacompleto AS select carne_empresa._id AS _id,carne_empresa.nombre_usuario AS nombre_usuario,carne_empresa.clave_usuario AS clave_usuario,carne_empresa.tipo_usuario_id_tipo_usuario AS tipo_usuario_id_tipo_usuario,empresa._id AS id_empresa,empresa.rut_empresa AS rut_empresa,empresa.digito_verificador_empresa AS digito_verificador_empresa,empresa.nombre_empresa AS nombre_empresa,empresa.nombre_contacto_empresa AS nombre_contacto_empresa,empresa.cargo_contacto_empresa AS cargo_contacto_empresa,empresa.email_empresa AS email_empresa,empresa.alcance_empresa AS alcance_empresa,empresa.telefono_empresa AS telefono_empresa,empresa.actividad_id_actividad AS actividad_id_actividad,persona._id AS id_persona,persona.rut_persona AS rut_persona,persona.digito_verificador AS digito_verificador,persona.nombre_persona AS nombre_persona,persona.segundo_nombre_persona AS segundo_nombre_persona,persona.apellido_persona AS apellido_persona,persona.segundo_apellido_persona AS segundo_apellido_persona,persona.actividad AS actividad,persona.area_actividad AS area_actividad,persona.dia_fecha_nacimiento AS dia_fecha_nacimiento,persona.mes_fecha_nacimiento AS mes_fecha_nacimiento,persona.ano_fecha_nacimiento AS ano_fecha_nacimiento,persona.edad AS edad,persona.email AS email,persona.celular AS celular,persona.telefono AS telefono from ((carne_empresa join empresa on((empresa._id = carne_empresa.empresa_id_empresa))) join persona on((persona._id = carne_empresa.persona_id_persona)))");

		db.execSQL("CREATE VIEW carro_comprascompleto AS select carro_compras._id AS _id,carro_compras.cantidad_carro AS cantidad_carro,carro_compras.precio_carro AS precio_carro,carro_compras.mayor AS mayor,carro_compras.tienda AS tienda,carro_compras.usuario_id_usuario AS usuario_id_usuario,carro_compras.usado AS usado,carro_compras.carne_empresa_id_carne_empresa AS carne_empresa_id_carne_empresa,precio._id AS id_precio,precio.precio_CLP AS precio_CLP,precio.precio_us AS precio_us,precio.precio_mayor_CLP AS precio_mayor_CLP,precio.precio_mayor_us AS precio_mayor_us,precio.precio_actual AS precio_actual,precio.descuento_promocion AS descuento_promocion,precio.cantidad_mayor AS cantidad_mayor,producto._id AS id_producto,producto.codigo_producto AS codigo_producto,producto.numero_serie AS numero_serie,producto.descripcion_producto AS descripcion_producto,producto.nombre_producto AS nombre_producto,producto.marca_producto AS marca_producto,producto.modelo_producto AS modelo_producto,producto.contenido_unidad AS contenido_unidad,producto.unidad_minima AS unidad_minima,producto.contenido_unidad_medida_id_contenido_unidad_medida AS contenido_unidad_medida_id_contenido_unidad_medida,producto.contenido AS contenido,producto.peso_neto AS peso_neto,producto.alto_cm AS alto_cm,producto.ancho_cm AS ancho_cm,producto.fondo_cm AS fondo_cm,producto.fabricante AS fabricante,producto.familia_necesidad_id_familia_necesidad AS familia_necesidad_id_familia_necesidad,producto.familia_producto_id_familia_producto AS familia_producto_id_familia_producto,producto.clase_producto AS clase_producto,producto.linea_producto AS linea_producto,producto.tipo_producto_id_tipo_producto AS tipo_producto_id_tipo_producto,producto.hot AS hot,producto.subcategoria_id_subcategoria AS subcategoria_id_subcategoria,producto.SKU AS SKU,producto.formato_producto_id_formato_producto AS formato_producto_id_formato_producto,stock.stock_tienda AS stock_tienda from (((carro_compras join producto on((carro_compras.producto_id_producto = producto._id))) join precio on((precio.producto_id_producto = producto._id))) join stock on((stock.producto_id_producto = producto._id))) where ((carro_compras.usado = 0) and (precio.precio_actual = 1))");

		db.execSQL("CREATE VIEW carro_egresoscompleto AS select carro_egresos._id AS _id,carro_egresos.cantidad_carro AS cantidad_carro,carro_egresos.precio_carro AS precio_carro,carro_egresos.mayor AS mayor,carro_egresos.tienda AS tienda,carro_egresos.usuario_id_usuario AS usuario_id_usuario,carro_egresos.usado AS usado,carro_egresos.carne_empresa_id_carne_empresa AS carne_empresa_id_carne_empresa,producto._id AS id_producto,producto.codigo_producto AS codigo_producto,producto.numero_serie AS numero_serie,producto.descripcion_producto AS descripcion_producto,producto.nombre_producto AS nombre_producto,producto.marca_producto AS marca_producto,producto.modelo_producto AS modelo_producto,producto.contenido_unidad AS contenido_unidad,producto.unidad_minima AS unidad_minima,producto.contenido_unidad_medida_id_contenido_unidad_medida AS contenido_unidad_medida_id_contenido_unidad_medida,producto.contenido AS contenido,producto.peso_neto AS peso_neto,producto.alto_cm AS alto_cm,producto.ancho_cm AS ancho_cm,producto.fondo_cm AS fondo_cm,producto.fabricante AS fabricante,producto.familia_necesidad_id_familia_necesidad AS familia_necesidad_id_familia_necesidad,producto.familia_producto_id_familia_producto AS familia_producto_id_familia_producto,producto.clase_producto AS clase_producto,producto.linea_producto AS linea_producto,producto.tipo_producto_id_tipo_producto AS tipo_producto_id_tipo_producto,producto.hot AS hot,producto.subcategoria_id_subcategoria AS subcategoria_id_subcategoria,producto.SKU AS SKU,producto.formato_producto_id_formato_producto AS formato_producto_id_formato_producto,stock.stock_tienda AS stock_tienda,precio.precio_CLP AS precio_CLP from (((carro_egresos join producto on((carro_egresos.producto_id_producto = producto._id))) left join stock on((stock.producto_id_producto = producto._id))) left join precio on((precio.producto_id_producto = producto._id))) where (carro_egresos.usado = 0)");

		db.execSQL("CREATE VIEW carro_egresosproducto AS select carro_egresos._id AS id_carro_egresos,carro_egresos.cantidad_carro AS cantidad_carro,carro_egresos.precio_carro AS precio_carro,carro_egresos.mayor AS mayor,carro_egresos.tienda AS tienda,carro_egresos.usuario_id_usuario AS usuario_id_usuario,carro_egresos.usado AS usado,carro_egresos.carne_empresa_id_carne_empresa AS carne_empresa_id_carne_empresa,producto._id AS id_producto,producto.codigo_producto AS codigo_producto,producto.numero_serie AS numero_serie,producto.descripcion_producto AS descripcion_producto,producto.nombre_producto AS nombre_producto,producto.marca_producto AS marca_producto,producto.modelo_producto AS modelo_producto,producto.contenido_unidad AS contenido_unidad,producto.unidad_minima AS unidad_minima,producto.contenido_unidad_medida_id_contenido_unidad_medida AS contenido_unidad_medida_id_contenido_unidad_medida,producto.contenido AS contenido,producto.peso_neto AS peso_neto,producto.alto_cm AS alto_cm,producto.ancho_cm AS ancho_cm,producto.fondo_cm AS fondo_cm,producto.fabricante AS fabricante,producto.familia_necesidad_id_familia_necesidad AS familia_necesidad_id_familia_necesidad,producto.familia_producto_id_familia_producto AS familia_producto_id_familia_producto,producto.clase_producto AS clase_producto,producto.linea_producto AS linea_producto,producto.tipo_producto_id_tipo_producto AS tipo_producto_id_tipo_producto,producto.hot AS hot,producto.subcategoria_id_subcategoria AS subcategoria_id_subcategoria,producto.SKU AS SKU,producto.formato_producto_id_formato_producto AS formato_producto_id_formato_producto from (carro_egresos join producto on((carro_egresos.producto_id_producto = producto._id))) where (carro_egresos.usado = 0)");

		db.execSQL("CREATE VIEW carro_ventacompleto AS select carro_venta._id AS _id,carro_venta.cantidad AS cantidad,carro_venta.precio AS precio,carro_venta.venta_id_venta AS venta_id_venta,carro_compras._id AS id_carro_compras,carro_compras.cantidad_carro AS cantidad_carro,carro_compras.precio_carro AS precio_carro,carro_compras.mayor AS mayor,carro_compras.tienda AS tienda,carro_compras.usuario_id_usuario AS usuario_id_usuario,carro_compras.usado AS usado,carro_compras.carne_empresa_id_carne_empresa AS carne_empresa_id_carne_empresa,precio._id AS id_precio,precio.precio_CLP AS precio_CLP,precio.precio_us AS precio_us,precio.precio_mayor_CLP AS precio_mayor_CLP,precio.precio_mayor_us AS precio_mayor_us,precio.precio_actual AS precio_actual,precio.descuento_promocion AS descuento_promocion,precio.cantidad_mayor AS cantidad_mayor,producto._id AS id_producto,producto.codigo_producto AS codigo_producto,producto.numero_serie AS numero_serie,producto.descripcion_producto AS descripcion_producto,producto.nombre_producto AS nombre_producto,producto.marca_producto AS marca_producto,producto.modelo_producto AS modelo_producto,producto.contenido_unidad AS contenido_unidad,producto.unidad_minima AS unidad_minima,producto.contenido_unidad_medida_id_contenido_unidad_medida AS contenido_unidad_medida_id_contenido_unidad_medida,producto.contenido AS contenido,producto.peso_neto AS peso_neto,producto.alto_cm AS alto_cm,producto.ancho_cm AS ancho_cm,producto.fondo_cm AS fondo_cm,producto.fabricante AS fabricante,producto.familia_necesidad_id_familia_necesidad AS familia_necesidad_id_familia_necesidad,producto.familia_producto_id_familia_producto AS familia_producto_id_familia_producto,producto.clase_producto AS clase_producto,producto.linea_producto AS linea_producto,producto.tipo_producto_id_tipo_producto AS tipo_producto_id_tipo_producto,producto.hot AS hot,producto.subcategoria_id_subcategoria AS subcategoria_id_subcategoria,producto.SKU AS SKU,producto.formato_producto_id_formato_producto AS formato_producto_id_formato_producto from (((carro_compras join producto on((carro_compras.producto_id_producto = producto._id))) join carro_venta on((carro_venta.carro_compras_id_carro_compras = carro_compras._id))) join precio on((precio.producto_id_producto = producto._id))) where ((carro_compras.usado = 1) and (precio.precio_actual = 1))");

		db.execSQL("CREATE VIEW compracompleta AS select v._id AS id_factura,v.rol_factura AS rol_factura,v.dia_factura AS dia_factura,v.mes_factura AS mes_factura,v.ano_factura AS ano_factura,v.fecha_factura AS fecha_factura,v.empresa_id_empresa AS empresa_id_empresa,v.carne_empresa_id_carne_empresa AS carne_empresa_id_carne_empresa,v.rut_proveedor AS rut_proveedor,v.nombre_proveedor AS nombre_proveedor,v.telefono_proveedor AS telefono_proveedor,v.tipo_documento_id_tipo_documento AS tipo_documento_id_tipo_documento,v.tipo_pago_id_tipo_pago AS tipo_pago_id_tipo_pago,v.total_factura AS total_factura,tp._id AS id_tipo_pago,tp.nombre_tipo_pago AS nombre_tipo_pago,tp.comision_tipo_pago AS comision_tipo_pago,td._id AS id_tipo_documento,td.nombre_tipo_documento AS nombre_tipo_documento from ((factura v join tipo_pago tp on((tp._id = v.tipo_pago_id_tipo_pago))) join tipo_documento td on((td._id = v.tipo_documento_id_tipo_documento)))");

		db.execSQL("CREATE VIEW ingresosegresos AS select dia.dia AS dia,dia.mes AS mes,dia.anno AS anno,dia.fecha AS fecha,sum(dia.ingreso) AS totalingreso,sum(dia.egreso) AS totalgasto,(case when (dia.ingreso = 0) then sum(dia.impuesto) end) AS impuestoegreso,(case when (dia.egreso = 0) then sum(dia.impuesto) end) AS impuestoingreso from dia");

		db.execSQL("CREATE VIEW item_facturacompleto AS select itf._id AS id_itemfactura,itf.cantidad AS cantidad,itf.precio AS precio,itf.producto_id_producto AS producto_id_producto,itf.factura_id_factura AS factura_id_factura,p._id AS id_producto,p.codigo_producto AS codigo_producto,p.numero_serie AS numero_serie,p.descripcion_producto AS descripcion_producto,p.nombre_producto AS nombre_producto,p.marca_producto AS marca_producto,p.modelo_producto AS modelo_producto,p.contenido_unidad AS contenido_unidad,p.contenido_unidad_medida_id_contenido_unidad_medida AS contenido_unidad_medida_id_contenido_unidad_medida,p.unidad_minima AS unidad_minima,p.contenido AS contenido,p.peso_neto AS peso_neto,p.alto_cm AS alto_cm,p.ancho_cm AS ancho_cm,p.fondo_cm AS fondo_cm,p.fabricante AS fabricante,p.clase_producto AS clase_producto,p.linea_producto AS linea_producto,p.hot AS hot,p.SKU AS SKU,p.subcategoria_id_subcategoria AS subcategoria_id_subcategoria,p.tipo_producto_id_tipo_producto AS tipo_producto_id_tipo_producto,p.formato_producto_id_formato_producto AS formato_producto_id_formato_producto,p.familia_necesidad_id_familia_necesidad AS familia_necesidad_id_familia_necesidad,p.familia_producto_id_familia_producto AS familia_producto_id_familia_producto from (item_factura itf join producto p on((itf.producto_id_producto = p._id)))");

		db.execSQL("CREATE VIEW productocompleto AS select producto._id AS _id,producto.codigo_producto AS codigo_producto,producto.numero_serie AS numero_serie,producto.descripcion_producto AS descripcion_producto,producto.nombre_producto AS nombre_producto,producto.marca_producto AS marca_producto,producto.modelo_producto AS modelo_producto,producto.contenido_unidad AS contenido_unidad,producto.unidad_minima AS unidad_minima,producto.contenido_unidad_medida_id_contenido_unidad_medida AS contenido_unidad_medida_id_contenido_unidad_medida,producto.contenido AS contenido,producto.peso_neto AS peso_neto,producto.alto_cm AS alto_cm,producto.ancho_cm AS ancho_cm,producto.fondo_cm AS fondo_cm,producto.fabricante AS fabricante,producto.familia_necesidad_id_familia_necesidad AS familia_necesidad_id_familia_necesidad,producto.familia_producto_id_familia_producto AS familia_producto_id_familia_producto,producto.clase_producto AS clase_producto,producto.linea_producto AS linea_producto,producto.tipo_producto_id_tipo_producto AS tipo_producto_id_tipo_producto,producto.hot AS hot,producto.subcategoria_id_subcategoria AS subcategoria_id_subcategoria,producto.SKU AS SKU,producto.formato_producto_id_formato_producto AS formato_producto_id_formato_producto,caracteristica._id AS id_caracteristica,caracteristica.numero_caracteristica AS numero_caracteristica,caracteristica.caracteristica AS caracteristica,caracteristica.valor_caracteristica AS valor_caracteristica,categoria._id AS id_categoria,categoria.nombre_categoria AS nombre_categoria,empresa._id AS id_empresa,empresa.rut_empresa AS rut_empresa,empresa.digito_verificador_empresa AS digito_verificador_empresa,empresa.nombre_empresa AS nombre_empresa,empresa.nombre_contacto_empresa AS nombre_contacto_empresa,empresa.cargo_contacto_empresa AS cargo_contacto_empresa,empresa.email_empresa AS email_empresa,empresa.alcance_empresa AS alcance_empresa,empresa.telefono_empresa AS telefono_empresa,empresa.actividad_id_actividad AS actividad_id_actividad,imagenprod._id AS id_imagenprod,imagenprod.urlimagenprod AS urlimagenprod,precio._id AS id_precio,precio.precio_CLP AS precio_CLP,precio.precio_us AS precio_us,precio.precio_mayor_CLP AS precio_mayor_CLP,precio.precio_mayor_us AS precio_mayor_us,precio.precio_actual AS precio_actual,precio.descuento_promocion AS descuento_promocion,precio.cantidad_mayor AS cantidad_mayor,reciclado._id AS id_reciclado,reciclado.reciclable AS reciclable,reciclado.reciclado AS reciclado,reciclado.valor_reciclaje AS valor_reciclaje,reciclado.empresa_id_empresa AS empresa_id_empresa,stock._id AS id_stock,stock.stock_real AS stock_real,stock.stock_minimo AS stock_minimo,stock.stock_ideal AS stock_ideal,stock.stock_tienda AS stock_tienda,stock.stock_virtual AS stock_virtual,stock.stock_vendido AS stock_vendido,stock.last_update AS last_update,subcategoria._id AS id_subcategoria,subcategoria.nombre_subcategoria AS nombre_subcategoria,subcategoria.descripcion_subcategoria AS descripcion_subcategoria,subcategoria.categoria_id_categoria AS categoria_id_categoria,talla._id AS id_talla,talla.am_largo AS am_largo,talla.am_ancho AS am_ancho,talla.am_fondo AS am_fondo,talla.eu_largo AS eu_largo,talla.eu_ancho AS eu_ancho,talla.eu_fondo AS eu_fondo,talla.num_largo AS num_largo,talla.num_ancho AS num_ancho,talla.num_fondo AS num_fondo,valor_nutricional._id AS id_valor_nutricional,valor_nutricional.nombre_valor AS nombre_valor,valor_nutricional.cantidad AS cantidad,valor_nutricional.valor_diario_total AS valor_diario_total,valor_nutricional.porcentaje_requerimientos AS porcentaje_requerimientos from ((((((((((producto join precio on((precio.producto_id_producto = producto._id))) join empresa on((empresa._id = precio.empresa_id_empresa))) join subcategoria on((subcategoria._id = producto.subcategoria_id_subcategoria))) join categoria on((categoria._id = subcategoria.categoria_id_categoria))) left join reciclado on((reciclado.producto_id_producto = producto._id))) left join stock on((stock.producto_id_producto = producto._id))) left join imagenprod on((imagenprod.producto_id_producto = producto._id))) left join talla on((talla.producto_id_producto = producto._id))) left join valor_nutricional on((valor_nutricional.producto_id_producto = producto._id))) left join caracteristica on((caracteristica.producto_id_producto = producto._id))) where (precio.precio_actual = 1)");

		db.execSQL("CREATE VIEW productocompra AS select producto._id AS id_producto,producto.codigo_producto AS codigo_producto,producto.numero_serie AS numero_serie,producto.descripcion_producto AS descripcion_producto,producto.nombre_producto AS nombre_producto,producto.marca_producto AS marca_producto,producto.modelo_producto AS modelo_producto,producto.contenido_unidad AS contenido_unidad,producto.unidad_minima AS unidad_minima,producto.contenido_unidad_medida_id_contenido_unidad_medida AS contenido_unidad_medida_id_contenido_unidad_medida,producto.contenido AS contenido,producto.peso_neto AS peso_neto,producto.alto_cm AS alto_cm,producto.ancho_cm AS ancho_cm,producto.fondo_cm AS fondo_cm,producto.fabricante AS fabricante,producto.familia_necesidad_id_familia_necesidad AS familia_necesidad_id_familia_necesidad,producto.familia_producto_id_familia_producto AS familia_producto_id_familia_producto,producto.clase_producto AS clase_producto,producto.linea_producto AS linea_producto,producto.tipo_producto_id_tipo_producto AS tipo_producto_id_tipo_producto,producto.hot AS hot,producto.subcategoria_id_subcategoria AS subcategoria_id_subcategoria,producto.SKU AS SKU,producto.formato_producto_id_formato_producto AS formato_producto_id_formato_producto,caracteristica._id AS id_caracteristica,caracteristica.numero_caracteristica AS numero_caracteristica,caracteristica.caracteristica AS caracteristica,caracteristica.valor_caracteristica AS valor_caracteristica,categoria._id AS id_categoria,categoria.nombre_categoria AS nombre_categoria,reciclado._id AS id_reciclado,reciclado.reciclable AS reciclable,reciclado.reciclado AS reciclado,reciclado.valor_reciclaje AS valor_reciclaje,reciclado.empresa_id_empresa AS empresa_id_empresa,stock._id AS id_stock,stock.stock_real AS stock_real,stock.stock_minimo AS stock_minimo,stock.stock_ideal AS stock_ideal,stock.stock_tienda AS stock_tienda,stock.stock_virtual AS stock_virtual,stock.stock_vendido AS stock_vendido,stock.last_update AS last_update,subcategoria._id AS id_subcategoria,subcategoria.nombre_subcategoria AS nombre_subcategoria,subcategoria.descripcion_subcategoria AS descripcion_subcategoria,subcategoria.categoria_id_categoria AS categoria_id_categoria,talla._id AS id_talla,talla.am_largo AS am_largo,talla.am_ancho AS am_ancho,talla.am_fondo AS am_fondo,talla.eu_largo AS eu_largo,talla.eu_ancho AS eu_ancho,talla.eu_fondo AS eu_fondo,talla.num_largo AS num_largo,talla.num_ancho AS num_ancho,talla.num_fondo AS num_fondo,valor_nutricional._id AS id_valor_nutricional,valor_nutricional.nombre_valor AS nombre_valor,valor_nutricional.cantidad AS cantidad,valor_nutricional.valor_diario_total AS valor_diario_total,valor_nutricional.porcentaje_requerimientos AS porcentaje_requerimientos from ((((((((producto join subcategoria on((subcategoria._id = producto.subcategoria_id_subcategoria))) join categoria on((categoria._id = subcategoria.categoria_id_categoria))) left join reciclado on((reciclado.producto_id_producto = producto._id))) left join stock on((stock.producto_id_producto = producto._id))) left join imagenprod on((imagenprod.producto_id_producto = producto._id))) left join talla on((talla.producto_id_producto = producto._id))) left join valor_nutricional on((valor_nutricional.producto_id_producto = producto._id))) left join caracteristica on((caracteristica.producto_id_producto = producto._id)))");

		db.execSQL("CREATE VIEW productoprecio AS select producto._id AS _id,producto.codigo_producto AS codigo_producto,producto.numero_serie AS numero_serie,producto.descripcion_producto AS descripcion_producto,producto.nombre_producto AS nombre_producto,producto.marca_producto AS marca_producto,producto.modelo_producto AS modelo_producto,producto.contenido_unidad AS contenido_unidad,producto.contenido_unidad_medida_id_contenido_unidad_medida AS contenido_unidad_medida_id_contenido_unidad_medida,producto.unidad_minima AS unidad_minima,producto.contenido AS contenido,producto.peso_neto AS peso_neto,producto.alto_cm AS alto_cm,producto.ancho_cm AS ancho_cm,producto.fondo_cm AS fondo_cm,producto.fabricante AS fabricante,producto.clase_producto AS clase_producto,producto.linea_producto AS linea_producto,producto.hot AS hot,producto.SKU AS SKU,producto.subcategoria_id_subcategoria AS subcategoria_id_subcategoria,producto.tipo_producto_id_tipo_producto AS tipo_producto_id_tipo_producto,producto.formato_producto_id_formato_producto AS formato_producto_id_formato_producto,producto.familia_necesidad_id_familia_necesidad AS familia_necesidad_id_familia_necesidad,producto.familia_producto_id_familia_producto AS familia_producto_id_familia_producto,precio._id AS id_precio,precio.precio_CLP AS precio_CLP,precio.precio_us AS precio_us,precio.precio_mayor_CLP AS precio_mayor_CLP,precio.precio_mayor_us AS precio_mayor_us,precio.precio_actual AS precio_actual,precio.descuento_promocion AS descuento_promocion,precio.cantidad_mayor AS cantidad_mayor,stock._id AS id_stock,stock.stock_real AS stock_real,stock.stock_minimo AS stock_minimo,stock.stock_ideal AS stock_ideal,stock.stock_tienda AS stock_tienda,stock.stock_virtual AS stock_virtual,stock.stock_vendido AS stock_vendido,stock.last_update AS last_update,stock.empresa_id_empresa AS empresa_id_empresa from ((producto join precio on((precio.producto_id_producto = producto._id))) join stock on((stock.producto_id_producto = producto._id)))");

		db.execSQL("CREATE VIEW stockcompleto AS select producto._id AS id_producto,producto.codigo_producto AS codigo_producto,producto.numero_serie AS numero_serie,producto.descripcion_producto AS descripcion_producto,producto.nombre_producto AS nombre_producto,producto.marca_producto AS marca_producto,producto.modelo_producto AS modelo_producto,producto.contenido_unidad AS contenido_unidad,producto.contenido_unidad_medida_id_contenido_unidad_medida AS contenido_unidad_medida_id_contenido_unidad_medida,producto.unidad_minima AS unidad_minima,producto.contenido AS contenido,producto.peso_neto AS peso_neto,producto.alto_cm AS alto_cm,producto.ancho_cm AS ancho_cm,producto.fondo_cm AS fondo_cm,producto.fabricante AS fabricante,producto.clase_producto AS clase_producto,producto.linea_producto AS linea_producto,producto.hot AS hot,producto.SKU AS SKU,producto.subcategoria_id_subcategoria AS subcategoria_id_subcategoria,producto.tipo_producto_id_tipo_producto AS tipo_producto_id_tipo_producto,producto.formato_producto_id_formato_producto AS formato_producto_id_formato_producto,producto.familia_necesidad_id_familia_necesidad AS familia_necesidad_id_familia_necesidad,producto.familia_producto_id_familia_producto AS familia_producto_id_familia_producto,stock._id AS _id,stock.stock_real AS stock_real,stock.stock_minimo AS stock_minimo,stock.stock_ideal AS stock_ideal,stock.stock_tienda AS stock_tienda,stock.stock_virtual AS stock_virtual,stock.stock_vendido AS stock_vendido,stock.last_update AS last_update,stock.producto_id_producto AS producto_id_producto,stock.empresa_id_empresa AS empresa_id_empresa from (producto join stock on((stock.producto_id_producto = producto._id)))");

		db.execSQL("CREATE VIEW usuariocompleto AS select persona._id AS id_persona,persona.rut_persona AS rut_persona,persona.digito_verificador AS digito_verificador,persona.nombre_persona AS nombre_persona,persona.segundo_nombre_persona AS segundo_nombre_persona,persona.apellido_persona AS apellido_persona,persona.segundo_apellido_persona AS segundo_apellido_persona,persona.actividad AS actividad,persona.area_actividad AS area_actividad,persona.dia_fecha_nacimiento AS dia_fecha_nacimiento,persona.mes_fecha_nacimiento AS mes_fecha_nacimiento,persona.ano_fecha_nacimiento AS ano_fecha_nacimiento,persona.edad AS edad,persona.email AS email,persona.celular AS celular,persona.telefono AS telefono,carne_empresa._id AS id_carne_empresa,carne_empresa.nombre_usuario AS nombre_usuario,carne_empresa.clave_usuario AS clave_usuario,carne_empresa.empresa_id_empresa AS empresa_id_empresa,carne_empresa.persona_id_persona AS persona_id_persona,carne_empresa.tipo_usuario_id_tipo_usuario AS tipo_usuario_id_tipo_usuario from (persona join carne_empresa on((carne_empresa.persona_id_persona = persona._id)))");

		db.execSQL("CREATE VIEW ventacompleta AS select v._id AS id_venta,v.numero_articulos AS numero_articulos,v.total AS total,v.dia_fecha_venta AS dia_fecha_venta,v.mes_fecha_venta AS mes_fecha_venta,v.anno_fecha_venta AS anno_fecha_venta,v.hora_fecha_venta AS hora_fecha_venta,v.usuario_id_usuario AS usuario_id_usuario,v.carne_empresa_id_carne_empresa AS carne_empresa_id_carne_empresa,v.tipo_pago_id_tipo_pago AS tipo_pago_id_tipo_pago,v.tipo_documento_id_tipo_documento AS tipo_documento_id_tipo_documento,tp._id AS id_tipo_pago,tp.nombre_tipo_pago AS nombre_tipo_pago,tp.comision_tipo_pago AS comision_tipo_pago,td._id AS id_tipo_documento,td.nombre_tipo_documento AS nombre_tipo_documento from ((venta v join tipo_pago tp on((tp._id = v.tipo_pago_id_tipo_pago))) join tipo_documento td on((td._id = v.tipo_documento_id_tipo_documento)))");

	}
}